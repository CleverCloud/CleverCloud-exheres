# Copyright 2013 Kevin Decherf <kevin@kdecherf.com>
# Distributed under the terms of the GNU General Public License v2

require github [ user=unbit ]
require alternatives setup-py [ import=setuptools blacklist=none ]

export_exlib_phases src_unpack src_configure src_compile src_install

SUMMARY="Full stack for building (and hosting) network applications"
HOMEPAGE="https://uwsgi-docs.readthedocs.io/en/latest/"

LICENCES="GPL-2"
SLOT="0"
MYOPTIONS="
    apache [[ description = [ Build the apache modules ] ]]
    python [[ description = [ Build the python plugin ] ]]
    ruby   [[ description = [ Build the ruby plugin ] ]]
"

DEPENDENCIES="
    build+run:
        dev-libs/jansson
        dev-libs/libxcrypt:=
        dev-libs/libxml2:2.0
        dev-libs/openssl:=
        dev-libs/pcre
        sys-libs/libcap
        apache? ( www-servers/apache )
        ruby? ( dev-lang/ruby:= )
"

WORK="${WORKBASE}"/${PNV}

# From buildconf/default.ini
PYTHON_PLUGINS=( python gevent )
# From buildconf/ruby2.ini
RUBY_PLUGINS=( rack rbthreads fiber )
# Plugins that require neither Python nor Ruby
OTHER_PLUGINS=( cgi )
# Apache modules
APACHE_MODS=( mod_uwsgi mod_Ruwsgi mod_proxy_uwsgi )

uwsgi_src_unpack() {
    default
    easy-multibuild_src_unpack
}

euwsgiplugins() {
    for p in "${@}"; do
        emake PYTHON=${PYTHON} PROFILE=core plugin."${p}"
    done
}

prepare_one_multibuild() {
    setup-py_prepare_one_multibuild
    # Handle this by hand or it gets compiled during install
    edo sed -e '/uwsgi_compiled/s/False/True/' -i setup.py
}

uwsgi_src_configure() {
    edo tee buildconf/exherbo.ini <<CONFIG
[uwsgi]
main_plugin =
inherit = base
xml = libxml2
yaml = true
json = jansson
ssl = true
pcre = true
CONFIG
    setup-py_src_configure
}

compile_one_multibuild () {
    setup-py_compile_one_multibuild
    option python && euwsgiplugins "${PYTHON_PLUGINS[@]}"
}

test_one_multibuild() {
    # tests don't pass with python >=3 due to some printf syntax changes
    # So we don't execute tests for python >=3
    # Still waiting for a response from upstream: https://github.com/unbit/uwsgi/issues/1507
    if ! ever at_least 3 ${MULTIBUILD_TARGET}; then
        setup-py_src_test_one_multibuild
    fi
}

uwsgi_src_compile() {
    emake PROFILE=exherbo
    option ruby && euwsgiplugins "${RUBY_PLUGINS[@]}"
    setup-py_src_compile
    euwsgiplugins "${OTHER_PLUGINS[@]}"
    if option apache; then
        pushd apache2
        for apachemod in "${APACHE_MODS[@]}"; do
            apxs -c "-Wc,${CFLAGS}" -o ${apachemod}.so ${apachemod}.c
        done
        popd
    fi
}

install_one_multibuild() {
    setup-py_install_one_multibuild
    if option python; then
        alternatives=( "${PN}_python" "${MULTIBUILD_TARGET}" "${MULTIBUILD_TARGET}" )
        for p in "${PYTHON_PLUGINS[@]}"; do
            doins "${p}"_plugin.so
            alternatives+=( /usr/$(exhost --target)/lib/uwsgi/"${p}"_plugin.so "${p}"${MULTIBUILD_TARGET}_plugin.so )
        done
        alternatives_for "${alternatives[@]}"
    fi
}

uwsgi_src_install() {
    dobin uwsgi
    insinto /usr/$(exhost --target)/lib/uwsgi
    option ruby && for p in "${RUBY_PLUGINS[@]}"; do
        doins "${p}"_plugin.so
    done
    for p in "${OTHER_PLUGINS[@]}" ; do
        doins "${p}"_plugin.so
    done
    setup-py_src_install

    if option apache; then
        insinto /usr/$(exhost --target)/libexec/apache2/modules
        for m in "${APACHE_MODS[@]}"; do
            doins apache2/.libs/${m}.so
        done
    fi
}
