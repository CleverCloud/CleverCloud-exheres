# Copyright 2017 Marc-Antoine Perennou <keruspe@exherbo.org>
# Copyright 2018 Arnaud Lefebvre <a.lefebvre@outlook.fr>
# Distributed under the terms of the GNU General Public License v2

require github [ user=sozu-proxy force_git_clone=true ] cargo
require systemd-service [ systemd_files=[ generated/${PN}.service ] systemd_tmpfiles=[ generated/${PN}.conf ] ]

export_exlib_phases src_compile src_test src_install

SUMMARY="sozu HTTP proxy"
HOMEPAGE="https://www.sozu.io"

LICENCES="AGPL-3.0"
SLOT="0"

MYOPTIONS=""
DEPENDENCIES="
"

if ever is_scm && [[ "${SCM_BRANCH}" == "master" ]]; then
    MYOPTIONS+="
        logs-debug [[ description = [ Add support for DEBUG logs level ] ]]
        logs-trace [[
            description = [ Add support for TRACE logs level ]
            requires = logs-debug
        ]]

        (
            providers:
                openssl
                rustls [[ description = [ Use Rustls as the SSL provider ] ]]
        ) [[
            number-selected = exactly-one
        ]]
    "

    DEPENDENCIES+="
        build+run:
            providers:openssl? ( dev-libs/openssl )
    "

    # rustls is the default SSL backend for now and doesn't
    # have an option
    BIN_ECARGO_FEATURE_ENABLES=(
        'logs-debug logs-debug'
        'logs-trace logs-trace'
        'providers:openssl use-openssl'
    )

fi

BUGS_TO="keruspe@exherbo.org"

SOZU_BIN_DIRS=("bin" "ctl")

setup_cargo_features() {
    local bin="${1}"
    if [[ "${bin}" == "bin" ]]; then
        ECARGO_FEATURE_ENABLES=( "${BIN_ECARGO_FEATURE_ENABLES[@]}" )
    else
        ECARGO_FEATURE_ENABLES=()
    fi
}

sozu_src_compile() {
    local bin
    for bin in "${SOZU_BIN_DIRS[@]}"; do
        edo pushd "${bin}"
        setup_cargo_features "${bin}"
        cargo_src_compile
        edo popd
    done
}

sozu_src_test() {
    local bin
    for bin in "${SOZU_BIN_DIRS[@]}"; do
        edo pushd "${bin}"
        setup_cargo_features "${bin}"
        cargo_src_test
        edo popd
    done
}

sozu_src_install() {
    local bin
    for bin in "${SOZU_BIN_DIRS[@]}"; do
        edo pushd "${bin}"
        setup_cargo_features "${bin}"
        ecargo_install
        edo popd
    done
    edo env BINDIR="/usr/$(exhost --target)/bin" SYSCONFDIR="/etc" DATADIR="/usr/share" RUNDIR="/run" os-build/exherbo/generate.sh
    install_systemd_files
    insinto /etc/sozu
    doins generated/config.toml
    emagicdocs
}
