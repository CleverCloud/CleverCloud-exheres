Upstream: no
From e228378cc7740ebfa26146be22300c1ea4d39423 Mon Sep 17 00:00:00 2001
From: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
Date: Mon, 16 Jul 2012 15:17:10 +0200
Subject: [PATCH 2/3] inject uuid into /instance_uuid

Signed-off-by: Marc-Antoine Perennou <Marc-Antoine@Perennou.com>
---
 nova/virt/baremetal/proxy.py    | 3 ++-
 nova/virt/disk/api.py           | 8 +++++---
 nova/virt/libvirt/connection.py | 3 ++-
 3 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/nova/virt/baremetal/proxy.py b/nova/virt/baremetal/proxy.py
index 50c72dd..e8cb13b 100644
--- a/nova/virt/baremetal/proxy.py
+++ b/nova/virt/baremetal/proxy.py
@@ -477,7 +477,8 @@ class ProxyConnection(driver.ComputeDriver):
                 disk.inject_data(injection_path, key, net, metadata,
                                  partition=target_partition,
                                  use_cow=False,  # FLAGS.use_cow_images,
-                                 disable_auto_fsck=disable_auto_fsck)
+                                 disable_auto_fsck=disable_auto_fsck,
+                                 uuid=inst['uuid'])
 
             except Exception as e:
                 # This could be a windows image, or a vmdk format disk
diff --git a/nova/virt/disk/api.py b/nova/virt/disk/api.py
index 046368f..c051e88 100644
--- a/nova/virt/disk/api.py
+++ b/nova/virt/disk/api.py
@@ -224,7 +224,7 @@ class _DiskImage(object):
 
 def inject_data(image,
                 key=None, net=None, metadata=None, admin_password=None,
-                partition=None, use_cow=False):
+                partition=None, use_cow=False, uuid=None):
     """Injects a ssh key and optionally net data into a disk image.
 
     it will mount the image as a fully partitioned disk and attempt to inject
@@ -238,7 +238,7 @@ def inject_data(image,
         try:
             inject_data_into_fs(img.mount_dir,
                                 key, net, metadata, admin_password,
-                                utils.execute)
+                                utils.execute, uuid)
         finally:
             img.umount()
     else:
@@ -291,7 +291,7 @@ def destroy_container(img):
         LOG.exception(_('Failed to remove container: %s'), exn)
 
 
-def inject_data_into_fs(fs, key, net, metadata, admin_password, execute):
+def inject_data_into_fs(fs, key, net, metadata, admin_password, execute, uuid):
     """Injects data into a filesystem already mounted by the caller.
     Virt connections can call this directly if they mount their fs
     in a different way to inject_data
@@ -304,6 +304,8 @@ def inject_data_into_fs(fs, key, net, metadata, admin_password, execute):
         _inject_metadata_into_fs(metadata, fs, execute=execute)
     if admin_password:
         _inject_admin_password_into_fs(admin_password, fs, execute=execute)
+    if uuid:
+        _inject_file_into_fs(fs, 'instance_uuid', uuid)
 
 
 def _join_and_check_path_within_fs(fs, *args):
diff --git a/nova/virt/libvirt/connection.py b/nova/virt/libvirt/connection.py
index ed94f15..e34bcbb 100644
--- a/nova/virt/libvirt/connection.py
+++ b/nova/virt/libvirt/connection.py
@@ -1380,7 +1380,8 @@ class LibvirtConnection(driver.ComputeDriver):
                 disk.inject_data(injection_path,
                                  key, net, metadata, admin_password,
                                  partition=target_partition,
-                                 use_cow=FLAGS.use_cow_images)
+                                 use_cow=FLAGS.use_cow_images,
+                                 uuid=instance['uuid'])
 
             except Exception as e:
                 # This could be a windows image, or a vmdk format disk
-- 
1.7.12.4

