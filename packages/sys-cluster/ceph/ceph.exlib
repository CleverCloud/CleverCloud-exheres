# Copyright 2013 Kevin Decherf <kevin@kdecherf.com>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'ceph-0.56.1.ebuild' from Gentoo, which is:
#     Copyright 1999-2013 Gentoo Foundation

require systemd-service [ systemd_files=[ ceph-osd@.service ceph-mds@.service ceph-mon@.service ceph.target ] ]

export_exlib_phases src_install

SUMMARY="Ceph is a distributed object store and file system"
HOMEPAGE="http://ceph.com"
DOWNLOADS="http://ceph.com/download/${PNV}.tar.gz"

LICENCES="LGPL-2.1"
SLOT="0"
MYOPTIONS="
    client   [[ description = [ Tools and libraries necessary for connecting to a Ceph cluster ] ]]
    debug    [[ description = [ Additional tools and tests for debugging Ceph clusters ] ]]
    gateway  [[ description = [ The RADOS Gateway, which provides OpenStack Swift and Amazon S3-compatible API access ] ]]
    fuse     [[ description = [ FUSE client for CephFS ] ]]
    man-pages
    profiler [[ description = [ Performance profiling with Google perf tools ] ]]
    server   [[ description = [ Tools and libraries necessary for participating in a Ceph cluster ] ]]
    xfs      [[ description = [ Use libxfs in FileStore for improved performance ] requires = [ server ] ]]
    client? ( ( providers: eudev systemd ) [[ number-selected = exactly-one ]] )"

DEPENDENCIES="
    build:
        dev-lang/yasm
        man-pages? ( dev-python/Sphinx )
        dev-lang/python:*
        dev-python/setuptools
    build+run:
        app-arch/snappy
        dev-db/leveldb
        dev-libs/boost
        dev-libs/libaio
        dev-libs/libatomic_ops
        dev-libs/libedit
        dev-libs/nss
        sys-apps/keyutils
        sys-apps/util-linux [[ note = [ libblkid, libuuid ] ]]
        client? (
            dev-libs/expat
            providers:eudev? ( sys-apps/eudev )
            providers:systemd? ( sys-apps/systemd )
        ) [[ note = [ rbd {map,unmapped,showmap} support ] ]]
        fuse? ( sys-fs/fuse )
        gateway? (
            dev-libs/expat
            dev-libs/fcgi
            net-misc/curl
        ) [[ note = [ uses bundled libs3 ] ]]
        profiler? ( dev-util/gperftools )
        xfs? ( sys-fs/xfsprogs )
"

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --localstatedir=/var

    # Support AIO on the journal
    --with-libaio
    # Upstream strongly recommends this
    --with-libatomic-ops
    # Use NSS as crypto provider
    --with-nss
    --without-cryptopp

    # Don't build with gcov
    --disable-coverage
    # Building a release version
    --disable-gitversion
    # We run tests under userpriv
    --disable-root-make-check
    # Extra tests under valgrind
    --disable-valgrind

    # Don't do anything clever with allocation
    --without-jemalloc
    --without-tcmalloc
    --without-tcmalloc-minimal
    # OCF-compliant cluster resource agent
    --without-ocf
    # Seagate Kinetic OSD (needs libkinetic_client)
    --without-kinetic
    # RocksDB OSD backend
    --without-librocksdb
    # Same, but also conflicts with jemalloc, so be careful
    --without-librocksdb-static
    # Extra benchmark utility; needs curl and libxml2
    --without-rest-bench
    # Act as a storage provider for Hadoop
    --disable-cephfs-java
    --without-hadoop
    # ZFS backing storage
    --without-libzfs
    # Debug placement group references
    --disable-pgrefdebugging
    # Needs libabeltrace
    --without-babeltrace
    # Needs LTT-ng
    --without-lttng
    # RDMA transport
    --disable-xio

    # Not yet packaged
    --without-system-libs3
)

DEFAULT_SRC_CONFIGURE_OPTION_WITHS=(
    # The core RADOS object-storage API
    "client rados"
    "client radosstriper"
    # The RADOS Block Device API - needed by qemu[ceph], among others
    "client rbd"
    # CephFS - the POSIX-compatible Ceph cluster filesystem
    "client cepfs"
    debug
    fuse
    "gateway radosgw"
    man-pages
    profiler
    # Monitor server - maintains cluster state
    "server mon"
    # Metadata server - implements POSIX API semantics for CephFS
    "server mds"
    # Object storage device server - actually stores data objects
    "server osd"
    "xfs libxfs"
)

ceph_src_install() {
    default

    install_systemd_files

    keepdir /etc/${PN} /var/log/${PN} /var/lib/${PN}/tmp
}

