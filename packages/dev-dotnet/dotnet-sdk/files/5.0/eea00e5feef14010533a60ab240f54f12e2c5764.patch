From eea00e5feef14010533a60ab240f54f12e2c5764 Mon Sep 17 00:00:00 2001
From: Dan Seefeldt <dseefeld@microsoft.com>
Date: Wed, 13 Jan 2021 14:55:57 -0600
Subject: [PATCH] [master] Replace legacy MyGet feeds (#1972)

* Update legacy myget feeds

* Fix spacing issue

* Update based on review comments

Co-authored-by: Dan Seefeldt <dseefeld@localhost.localdomain>
---
 NuGet.config                                  |  2 +-
 repos/Directory.Build.targets                 | 56 +++++++++++++++++++
 repos/aspnetcore.proj                         |  3 +-
 smoke-test.sh                                 |  2 +-
 .../ReplaceFeedsInNuGetConfig.cs              | 54 ++++++++++++++++++
 5 files changed, 113 insertions(+), 4 deletions(-)
 create mode 100644 tools-local/tasks/Microsoft.DotNet.SourceBuild.Tasks.XPlat/ReplaceFeedsInNuGetConfig.cs

diff --git a/NuGet.config b/NuGet.config
index 9774cd8ba3..a1c0c1900f 100644
--- a/NuGet.config
+++ b/NuGet.config
@@ -9,7 +9,7 @@
     <add key="darc-pub-dotnet-aspnetcore-371a26f" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/darc-pub-dotnet-aspnetcore-371a26f0/nuget/v3/index.json" />
     <!--End: Package sources managed by Dependency Flow automation. Do not edit the sources above.-->
     <add key="api.nuget.org" value="https://api.nuget.org/v3/index.json" />
-    <add key="nuget-build" value="https://dotnet.myget.org/F/nuget-build/api/v3/index.json" />
+    <add key="nuget-build" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/nuget-build/nuget/v3/index.json" />
     <add key="dotnet5" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json" />
     <add key="dotnet5-transport" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5-transport/nuget/v3/index.json" />
     <add key="dotnet-eng" value="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-eng/nuget/v3/index.json" />
diff --git a/repos/Directory.Build.targets b/repos/Directory.Build.targets
index 1aafae1ef4..41e2295c82 100644
--- a/repos/Directory.Build.targets
+++ b/repos/Directory.Build.targets
@@ -9,6 +9,7 @@
   <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="GetSourceBuiltNupkgCacheConflicts" />
   <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="ReadNuGetPackageInfos" />
   <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="RemoveInternetSourcesFromNuGetConfig" />
+  <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="ReplaceFeedsInNuGetConfig" />
   <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="UpdateJson" />
   <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="ValidateUsageAgainstBaseline" />
   <UsingTask AssemblyFile="$(XPlatSourceBuildTasksAssembly)" TaskName="WriteBuildOutputProps" />
@@ -139,6 +140,61 @@
                             SourcePath="$(ExtraRestoreSourcePath)"
                             Condition="'$(ExtraRestoreSourcePath)' != ''" />
 
+    <!-- Update NuGet.Config files that have deprecated myget feeds -->
+    <ItemGroup>
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/nuget-build/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/nuget-build/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://www.myget.org/F/nugetbuild/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/nuget-build/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/dotnet-corefxlab/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-experimental/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/dotnet-core/api/v3/index.json"
+        NewFeed="https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/vstest/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/test-tools/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/mstestv2/auth/1e768268-8c95-4e7e-9fd2-0eb1b1b69b18/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/test-tools/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/roslyn/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/roslyn-tools/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/roslyn-analyzers/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/roslyn-master-nightly/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/symreader-converter/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/interactive-window/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/mstestv2/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/test-tools/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/vsunittesting/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-tools/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/msbuild/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json" />
+      <LegacyFeedMapping
+        Include="https://dotnet.myget.org/F/dotnet-buildtools/api/v3/index.json"
+        NewFeed="https://pkgs.dev.azure.com/dnceng/public/_packaging/myget-legacy/nuget/v3/index.json" />
+    </ItemGroup>
+
+    <ReplaceFeedsInNugetConfig InputFile="%(NuGetConfigFiles.Identity)"
+                               FeedMapping="@(LegacyFeedMapping)" />
+
     <WriteLinesToFile File="$(RepoCompletedSemaphorePath)UpdateNuGetConfig.complete" Overwrite="true" />
   </Target>
 
diff --git a/repos/aspnetcore.proj b/repos/aspnetcore.proj
index bbe8a8731d..97ea777603 100644
--- a/repos/aspnetcore.proj
+++ b/repos/aspnetcore.proj
@@ -41,8 +41,7 @@
     <EnvironmentRestoreSources Condition="'$(OfflineBuild)' != 'true'">$(EnvironmentRestoreSources)%3Bhttps://dotnetfeed.blob.core.windows.net/aspnet-aspnetcore/index.json</EnvironmentRestoreSources>
     <EnvironmentRestoreSources Condition="'$(OfflineBuild)' != 'true'">$(EnvironmentRestoreSources)%3Bhttps://dotnetfeed.blob.core.windows.net/aspnet-blazor/index.json</EnvironmentRestoreSources>
     <EnvironmentRestoreSources Condition="'$(OfflineBuild)' != 'true'">$(EnvironmentRestoreSources)%3Bhttps://dotnetfeed.blob.core.windows.net/dotnet-core/index.json</EnvironmentRestoreSources>
-    <EnvironmentRestoreSources Condition="'$(OfflineBuild)' != 'true'">$(EnvironmentRestoreSources)%3Bhttps://dotnet.myget.org/F/aspnetcore-dev/api/v3/index.json</EnvironmentRestoreSources>
-    <EnvironmentRestoreSources Condition="'$(OfflineBuild)' != 'true'">$(EnvironmentRestoreSources)%3Bhttps://dotnet.myget.org/F/aspnetcore-tools/api/v3/index.json</EnvironmentRestoreSources>
+    <EnvironmentRestoreSources Condition="'$(OfflineBuild)' != 'true'">$(EnvironmentRestoreSources)%3Bhttps://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet5/nuget/v3/index.json</EnvironmentRestoreSources>
   </PropertyGroup>
 
   <ItemGroup>
diff --git a/smoke-test.sh b/smoke-test.sh
index db5880dad4..deb281ac6f 100755
--- a/smoke-test.sh
+++ b/smoke-test.sh
@@ -253,7 +253,7 @@ function setupDevCerts() {
     echo "Setting up dotnet-dev-certs $devCertsVersion to generate dev certificate" | tee -a "$logFile"
     (
         set -x
-        "$dotnetDir/dotnet" tool install -g dotnet-dev-certs --version "$devCertsVersion" --add-source https://dotnet.myget.org/F/dotnet-core/api/v3/index.json
+        "$dotnetDir/dotnet" tool install -g dotnet-dev-certs --version "$devCertsVersion" --add-source https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
         export DOTNET_ROOT="$dotnetDir"
         "$testingHome/.dotnet/tools/dotnet-dev-certs" https
     ) >> "$logFile" 2>&1
diff --git a/tools-local/tasks/Microsoft.DotNet.SourceBuild.Tasks.XPlat/ReplaceFeedsInNuGetConfig.cs b/tools-local/tasks/Microsoft.DotNet.SourceBuild.Tasks.XPlat/ReplaceFeedsInNuGetConfig.cs
new file mode 100644
index 0000000000..a4519ead52
--- /dev/null
+++ b/tools-local/tasks/Microsoft.DotNet.SourceBuild.Tasks.XPlat/ReplaceFeedsInNuGetConfig.cs
@@ -0,0 +1,54 @@
+// Licensed to the .NET Foundation under one or more agreements.
+// The .NET Foundation licenses this file to you under the MIT license.
+// See the LICENSE file in the project root for more information.
+
+using System;
+using System.IO;
+using Microsoft.Build.Framework;
+using Microsoft.Build.Utilities;
+
+namespace Microsoft.DotNet.Build.Tasks
+{
+    /// <summary>
+    /// Replaces feeds in a NuGet.Config file given a mapping
+    /// of old feeds to new feeds.
+    /// </summary>
+    public class ReplaceFeedsInNuGetConfig : Task
+    {
+        /// <summary>
+        /// The NuGet.Config file in which to replace feeds.
+        /// </summary>
+        [Required]
+        public string InputFile { get; set; }
+
+        /// <summary>
+        /// An item group of feeds to update.
+        /// %(Identity): The feed URL to find in the NuGet.Config.
+        /// %(NewFeed): The feed URL to replace %(Identity) with.
+        /// </summary>
+        [Required]
+        public ITaskItem[] FeedMapping { get; set; }
+
+        public override bool Execute()
+        {
+            string fileContents = File.ReadAllText(InputFile);
+            bool updated = false;
+
+            foreach (var feed in FeedMapping)
+            {
+                string oldFeed = feed.ItemSpec;
+                string newFeed = feed.GetMetadata("NewFeed");
+
+                if (fileContents.Contains(oldFeed))
+                {
+                    fileContents = fileContents.Replace(oldFeed, newFeed);
+                    updated = true;
+                }
+            }
+
+            if (updated) File.WriteAllText(InputFile, fileContents);
+
+            return true;
+        }
+    }
+}
