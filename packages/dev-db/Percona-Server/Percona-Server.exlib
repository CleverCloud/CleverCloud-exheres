# Copyright 2014 Marc-Antoine Perennou <keruspe@exherbo.org>
# Distributed under the terms of the GNU General Public License v2
# Based on mysql.exlib which is
#   Copyright 2008, 2009, 2010 Ingmar Vanhassel <ingmar@exherbo.org>
#   Copyright 2011-2013 Timo Gurr <tgurr@exherbo.org>
#   Distributed under the terms of the GNU General Public License v2

myexparam release

require cmake [ api=2 ] systemd-service easy-multibuild

export_exlib_phases pkg_pretend src_install

PERCONA_MAJOR_VERSION=$(ever range 1-2)

SUMMARY="A relational database management system (RDBMS)"
HOMEPAGE="http://www.mysql.com/"
DOWNLOADS="
http://www.percona.com/redir/downloads/${PN}-${PERCONA_MAJOR_VERSION}/LATEST/source/${PNV}-rel$(exparam release).tar.gz
"

LICENCES="GPL-2" # with-exceptions
SLOT="0"
MYOPTIONS="
    debug
    embedded-server [[ description = [ The embedded MySQL server library, a full-featured MySQL server that can be run inside a client application ] ]]
    tcpd
    multibuild_c: 32 64
"

DEPENDENCIES="
    build+run:
        group/mysql
        user/mysql
        dev-libs/libaio[multibuild_c:*(-)?]
        dev-libs/libedit[multibuild_c:*(-)?]
        dev-libs/libevent[>=1.4.12][multibuild_c:*(-)?]
        dev-libs/openssl[>=0.9.7][multibuild_c:*(-)?]
        sys-libs/zlib[>=1.2.3][multibuild_c:*(-)?]
        tcpd? ( sys-apps/tcp-wrappers[multibuild_c:*(-)?] )
        !dev-db/mysql [[
            description = [ Percona-Server is a drop-in replacement for MySQL with same binary names ]
            resolution = uninstall-blocked-after
        ]]
        !dev-db/mariadb [[
            description = [ MariaDB is another drop-in replacement for MySQL with same binary names ]
            resolution = uninstall-blocked-after
        ]]
    suggestion:
        app-admin/logrotate [[ description = [ Use logrotate for rotating logs ] ]]
    recommendation:
        dev-db/percona-toolkit [[ description = [ The percona toolkit to manage Percona-Server ] ]]
"

DEFAULT_SRC_PREPARE_PATCHES=( "${FILES}"/bison3.patch )

CMAKE_SOURCE="${WORKBASE}/${PNV}-rel$(exparam release)"

Percona-Server_pkg_pretend() {
    # Sanity check when upgrading to a different x.y version of Percona-Server
    if [[ -z ${PERCONA_MAJOR_UPGRADE} ]] && has_version ${CATEGORY}/${PN} && \
        ! has_version ${CATEGORY}/${PN}[=${PERCONA_MAJOR_VERSION}*] ; then
        ewarn "To install a different major version of MySQL, you have to dump/reload your database."
        ewarn "When you've done this, please set 'PERCONA_MAJOR_UPGRADE=YesPlease', to continue the upgrade."
        ewarn "For more information visit:"
        ewarn "http://dev.mysql.com/doc/refman/${PERCONA_MAJOR_VERSION}/en/upgrading.html"
        ewarn "http://dev.mysql.com/doc/refman/${PERCONA_MAJOR_VERSION}/en/downgrading.html"
        die "Dump your databases before doing a major version upgrade of MySQL."
    fi

    if [[ -f "${ROOT}"/etc/tmpfiles.d/${PN}.conf ]] ; then
        ewarn "The configuration file /etc/tmpfiles.d/${PN}.conf has been moved to"
        ewarn "/usr/${LIBDIR}/tmpfiles.d/${PN}.conf and can be safely removed after upgrade"
        ewarn "if you did not make any changes to it."
    fi
}

configure_one_multibuild() {
    local cmakeargs=(
        -DBUILD_CONFIG:STRING=mysql_release
        -DCMAKE_INSTALL_PREFIX:PATH=/usr
        -DCOMPILATION_COMMENT:STRING="Exherbo"
        -DDEFAULT_CHARSET:STRING=utf8
        -DDEFAULT_COLLATION:STRING=utf8_general_ci
        -DFEATURE_SET:STRING=community
        -DINSTALL_BINDIR:PATH=bin
        -DINSTALL_DOCDIR:PATH=share/doc/${PNVR}
        -DINSTALL_DOCREADMEDIR:PATH=share/doc/${PNVR}
        -DINSTALL_INCLUDEDIR:PATH=include/mysql
        -DINSTALL_INFODIR:PATH=share/mysql/info
        -DINSTALL_LIBDIR:PATH=${LIBDIR}/mysql
        -DINSTALL_MANDIR:PATH=share/man
        -DINSTALL_MYSQLSHAREDIR:PATH=share/mysql
        # Empty value to not install the mysql-test directory
        -DINSTALL_MYSQLTESTDIR:STRING=
        -DINSTALL_PLUGINDIR:PATH=${LIBDIR}/mysql/plugin
        -DINSTALL_SBINDIR:PATH=sbin
        -DINSTALL_SCRIPTDIR:PATH=bin
        # Empty value to not install the sql-bench directory
        -DINSTALL_SQLBENCHDIR:STRING=
        -DINSTALL_SUPPORTFILESDIR:PATH=share/doc/${PNVR}/support-files
        -DMYSQL_DATADIR:PATH=/var/lib/mysql
        -DMYSQL_UNIX_ADDR:PATH=/run/mysqld/mysqld.sock
        -DSYSCONFDIR:PATH=/etc/mysql
        -DENABLED_PROFILING:BOOL=TRUE
        -DWITH_ASAN:BOOL=FALSE
        -DWITH_EXTRA_CHARSETS:STRING=all
        # Default ENGINES for MySQL 5.6 community build (currently == xlarge) minus embedded
        -DWITH_ARCHIVE_STORAGE_ENGINE:BOOL=TRUE
        -DWITH_BLACKHOLE_STORAGE_ENGINE:BOOL=TRUE
        -DWITH_FEDERATED_STORAGE_ENGINE:BOOL=TRUE
        -DWITH_INNOBASE_STORAGE_ENGINE:BOOL=TRUE
        -DWITH_PARTITION_STORAGE_ENGINE:BOOL=TRUE
        -DWITH_SSL:STRING=system
        -DWITH_UNIT_TESTS:BOOL=TRUE
        -DWITH_VALGRIND:BOOL=FALSE
        -DWITH_ZLIB:STRING=system
        -DBUILD_WITH_WERROR:BOOL=FALSE
        -DCOMPILE_FLAG_WERROR:BOOL=FALSE
        -DENABLE_DTRACE:BOOL=FALSE
        -DENABLE_GCOV:BOOL=FALSE
        -DENABLE_GPROF:BOOL=FALSE
        -DENABLED_LOCAL_INFILE:BOOL=TRUE
        -DWITH_EDITLINE:STRING=system
        -DWITH_LIBEVENT:STRING=system
    )

    if option debug ; then
        cmakeargs+=(
            -DCMAKE_BUILD_TYPE:STRING=Debug
        )
    else
        cmakeargs+=(
            -DCMAKE_BUILD_TYPE:STRING=Release
        )
    fi

    ecmake \
        "${cmakeargs[@]}" \
        $(cmake_with debug DEBUG)\
        $(cmake_with embedded-server EMBEDDED_SERVER)\
        $(cmake_with tcpd LIBWRAP)
}

install_one_multibuild() {
    cmake_src_install

    ! option debug && edo rmdir "${IMAGE}"/usr/${LIBDIR}/mysql/plugin/debug

    # construct ldpath for all targets
    ldpath="/usr/${LIBDIR}/${PN}${ldpath:+:${ldpath}}"
}

Percona-Server_src_install() {
    local ldpath

    easy-multibuild_src_install

    # Remove empty directories
    edo rm -r "${IMAGE}"/usr/data
    edo rm -r "${IMAGE}"/usr/share/mysql/info

    keepdir /etc/mysql

    if ever at_least 5.6.10 ; then
        edo cp "${IMAGE}"/usr/share/doc/${PNVR}/support-files/my-default.cnf "${IMAGE}"/etc/mysql/my.cnf
    else
        edo cp "${IMAGE}"/usr/share/doc/${PNVR}/support-files/my-small.cnf "${IMAGE}"/etc/mysql/my.cnf
    fi
    edo mv "${IMAGE}"/usr/bin/mysqlaccess.conf "${IMAGE}"/etc/mysql/mysqlaccess.conf
    edo chmod 644 "${IMAGE}"/etc/mysql/mysqlaccess.conf

    keepdir /var/{lib,log}/mysql
    edo chown mysql:mysql "${IMAGE}"/var/{lib,log}/mysql
    edo chmod 755 "${IMAGE}"/var/{lib,log}/mysql

    hereenvd 46mysql <<EOF
LDPATH=${ldpath}
EOF

    insinto /etc/logrotate.d
    newins "${FILES}"/logrotate.mysql mysql

    install_systemd_files

    if option systemd ; then
        insinto /usr/${LIBDIR}/tmpfiles.d
        hereins ${PN}.conf <<EOF
d /run/mysqld 0755 mysql mysql
EOF
    fi
}

