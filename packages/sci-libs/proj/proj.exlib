# Copyright 2014 Kevin Decherf <kevin@kdecherf.com>
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'proj-4.8.0.ebuild' from Gentoo, which is:
#     Copyright 1999-2014 Gentoo Foundation

require cmake
require alternatives

export_exlib_phases src_prepare src_test src_install

SUMMARY="PROJ.4 - Cartographic Projections Library"
HOMEPAGE="https://proj.org/"
DOWNLOADS="https://download.osgeo.org/${PN}/${PNV}.tar.gz"

LICENCES="MIT"
MYOPTIONS="tiff"

DEPENDENCIES="
    build:
        virtual/pkg-config
    build+run:
        dev-db/sqlite:3[>=3.11]
        net-misc/curl
        tiff? ( media-libs/tiff:= )
        !sci-libs/proj:0 [[
            description = [ Pre-slotted version ]
            resolution = uninstall-blocked-before
        ]]
    test:
        dev-cpp/gtest[>=1.8.1]
"

if ever at_least 9.6.2 ; then
    DEPENDENCIES+="
        build:
            dev-libs/json[>=3.7.0]
    "
fi

CMAKE_SRC_CONFIGURE_PARAMS=(
    -DCMAKE_INSTALL_DOCDIR:PATH="/usr/share/doc/${PNVR}"
    -DENABLE_CURL:BOOL=TRUE
    -DUSE_EXTERNAL_GTEST:BOOL=TRUE
)
CMAKE_SRC_CONFIGURE_OPTION_ENABLES=( TIFF )
CMAKE_SRC_CONFIGURE_TESTS=(
    '-DBUILD_TESTING:BOOL=TRUE -DBUILD_TESTING:BOOL=FALSE'
)

if ever at_least 9.6.2 ; then
    CMAKE_SRC_CONFIGURE_PARAMS+=(
        -DBASH_COMPLETIONS_DIR:PATH=""
        -DBUILD_SHARED_LIBS:BOOL=TRUE
        -DEMBED_PROJ_DATA_PATH:BOOL=TRUE
        -DEMBED_RESOURCE_FILES:BOOL=FALSE
        -DEXPORT_PDB:BOOL=FALSE
        -DNLOHMANN_JSON_ORIGIN:STRING=external
        -DRUN_NETWORK_DEPENDENT_TESTS:BOOL=FALSE
        -DTESTING_USE_NETWORK:BOOL=FALSE
        -DUSE_CCACHE:BOOL=FALSE
        -DUSE_ONLY_EMBEDDED_RESOURCE_FILES:BOOL=FALSE
    )
else
    CMAKE_SRC_CONFIGURE_PARAMS+=(
        -DDEFAULT_DATA_SUBDIR:PATH=/usr/share/${PN}-${SLOT}
    )
fi

proj_src_prepare() {
    cmake_src_prepare

    if ever at_least 9.6.2 ; then
        edo sed -i \
            -e "/set(PROJ_DATA_PATH/s:/proj:&-${SLOT}:" \
            CMakeLists.txt
    else
        edo sed -i \
            -e "/DEFAULT_DATA_SUBDIR/s:/proj:&-${SLOT}:" \
            cmake/ProjInstallPath.cmake
    fi
}

proj_src_test(){
    # PROJ_LIB is used as searchpath for proj.db
    export PROJ_LIB="${CMAKE_BUILDDIR}/data"

    if ! ever at_least 9.6.2 && ! option tiff ; then
        # 6 tests out of 55 fail without tiff
        CMAKE_SRC_TEST_PARAMS=(
            -E '(Deformation|geotiff_grids|defmodel|proj_test_cpp_api|gie_self_tests|test_network)'
        )
    fi

    cmake_src_test
}

proj_src_install() {
    cmake_src_install

    local alternatives=(
        /usr/$(exhost --target)/lib/cmake/proj{,-${SLOT}}
        /usr/$(exhost --target)/lib/cmake/proj4{,-${SLOT}}
        /usr/$(exhost --target)/lib/libproj{,-${SLOT}}.so
    )

    if ever at_least 9.6.2 ; then
        alternatives+=(
            /usr/$(exhost --target)/lib/pkgconfig/proj{,-${SLOT}}.pc
        )
    fi

    edo cd "${IMAGE}"

    edo pushd usr/$(exhost --target)/include
    local inc
    for inc in *; do
        alternatives+=( /usr/$(exhost --target)/include/${inc}{,-${SLOT}} )
    done
    edo popd

    edo pushd usr/$(exhost --target)/bin
    local bin
    for bin in *; do
        alternatives+=( /usr/$(exhost --target)/bin/${bin}{,-${SLOT}} )
    done
    edo popd

    alternatives_for _$(exhost --target)_${PN} ${SLOT} ${SLOT} "${alternatives[@]}"

    alternatives=()
    edo pushd usr/share/man
    local man
    for man in man?/*; do
        alternatives+=( /usr/share/man/${man}{,-${SLOT}} )
    done
    edo popd

    alternatives_for _${PN} ${SLOT} ${SLOT} "${alternatives[@]}"
}

